knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
library(magrittr)
library(ggplot2)
library(scales)
library(ggthemes)
library(ggsci)
library(kableExtra)
library(xtable)
library(matlab)
library(R.matlab)
library(MCMCpack)
library(ggrepel)
mres <- as.matrix(nres)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
library(magrittr)
library(ggplot2)
library(scales)
library(ggthemes)
library(ggsci)
library(kableExtra)
library(xtable)
library(matlab)
library(R.matlab)
library(MCMCpack)
library(ggrepel)
folders <- c("Emotion", "Gambling", "Language",
"Relational", "Social", "WM")
task_names <- c("Emotion Recognition",
"Incentive Processing", "Language and Math",
"Relational Reasoning", "Social Cognition",
"Working Memory")
regions <- c("Action", "LTM", "Perception", "Procedural", "WM")
res <- NULL
for (task in folders) {
vals <- scan(file = paste("../tfMRI/all_architectures/",
task,
paste(task, "_avg_A.txt", sep=""),
sep="/"),
sep=",")
if (is.null(res)) {
res <- vals
} else {
res <- rbind(res, vals)
}
}
vals <- scan("Rest1_avg_A.csv", sep=",")
res <- rbind(res, vals)
connection_names <- c(outer(regions, regions, FUN = function(x, y) {paste(x, "->", y)}))
colnames(res) <- connection_names
nres <- res[,colMeans(res) != 0]
rownames(nres) <- c(task_names, "Resting state")
nres <- as_tibble(nres)
wres <- nres %>%
add_column(Task = c(task_names, "Resting state") )
wres <- wres %>%
mutate(TaskVsRest = if_else(Task == "Resting state", "Rest", "Task"))
lres <- wres %>%
pivot_longer(colnames(nres), names_to = "Connection", values_to = "Value")
lres$Task <- factor(lres$Task,
levels = c(task_names, "Resting state"))
ggplot(lres, aes(y=Connection, x=Value, col=Task)) +
geom_point(alpha=0.6, position=position_jitter(height=0.2), size=5) +
stat_summary(data = filter(lres, TaskVsRest=="Task"),
fun.data = mean_sdl,
geom="errorbar",
col="navy",
width=0.25) +
scale_color_manual(values = c("deepskyblue1", "dodgerblue", "dodgerblue1", "dodgerblue2", "dodgerblue3", "dodgerblue4", "red")) +
scale_shape_manual(values=c(21, 22)) +
ylab("Connection") +
xlab("Effective Connectivity (Hz)") +
ggtitle("Connectivity Values\nAcross Tasks and Rest Data") +
labs(col="Task") +
theme_pander() +
#theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(legend.position="right")
ggsave("figure11.png")
summary(aov(Value ~ (Connection * TaskVsRest), lres)) %>%
xtable() %>%
kable(digits = 3) %>%
kable_styling(bootstrap_options = c("striped", "hover"))
mres <- as.matrix(nres)
R <- cor(t(mres))
R[R==1] <- NA
tR <- as_tibble(R)
wR <- tR %>%
add_column(From = c(task_names, "Resting state"))
lR <- wR %>%
pivot_longer(!From, names_to="To", values_to = "Correlation")
wR   %>%
xtable() %>%
kable(digits = 3) %>%
kable_styling(bootstrap_options = c("striped", "hover"))
lR   %>%
xtable() %>%
kable(digits = 3) %>%
kable_styling(bootstrap_options = c("striped", "hover"))
R
nres
mres
tR
mres <- as.matrix(nres)
R <- cor(t(mres))
R[R==1] <- NA
tR <- as_tibble(R)
names(tR) <- c(task_names, "Resting state")
wR <- tR %>%
add_column(From = c(task_names, "Resting state"))
lR <- wR %>%
pivot_longer(!From, names_to="To", values_to = "Correlation")
wR   %>%
xtable() %>%
kable(digits = 3) %>%
kable_styling(bootstrap_options = c("striped", "hover"))
lR   %>%
xtable() %>%
kable(digits = 3) %>%
kable_styling(bootstrap_options = c("striped", "hover"))
tR
ggplot(lR, aes(x=From, y=To, fill=Correlation)) +
geom_tile(col="white") +
# scale_fill_viridis_b(option="plasma") +
theme_pander()
ggplot(lR, aes(x=From, y=To, fill=Correlation)) +
geom_tile(col="white") +
# scale_fill_viridis_b(option="plasma") +
theme_pander() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(lR, aes(x=From, y=To, fill=Correlation)) +
geom_tile(col="white") +
# scale_fill_viridis_b(option="plasma") +
theme_pander() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(lR, aes(x=From, y=To, fill=Correlation)) +
geom_tile(col="white") +
# scale_fill_viridis_b(option="plasma") +
theme_pander() +
ggtitle("Parameter Correlations Across Tasks and Rest")
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(lR, aes(x=From, y=To, fill=Correlation)) +
geom_tile(col="white") +
# scale_fill_viridis_b(option="plasma") +
theme_pander() +
ggtitle("Parameter Correlations Across Tasks and Rest") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
lR
corMeans <- lR %>%
group_by("From") %>%
summarise(meanR = mean(Correlation))
corMeans
lR
corMeans <- lR %>%
group_by("From") %>%
summarise(meanR = mean(Correlation, na.rm=T))
corMeans
mres <- as.matrix(nres)
R <- cor(t(mres))
R[R==1] <- NA
tR <- as_tibble(R)
names(tR) <- c(task_names, "Resting state")
wR <- tR %>%
add_column(From = c(task_names, "Resting state"))
lR <- wR %>%
pivot_longer(!From, names_to="To", values_to = "Correlation")
wR   %>%
xtable() %>%
kable(digits = 3) %>%
kable_styling(bootstrap_options = c("striped", "hover"))
lR   %>%
xtable() %>%
kable(digits = 3) %>%
kable_styling(bootstrap_options = c("striped", "hover"))
lR$From <- as_factor(lR$From, levels=c(task_names), "Resting State")
mres <- as.matrix(nres)
R <- cor(t(mres))
R[R==1] <- NA
tR <- as_tibble(R)
names(tR) <- c(task_names, "Resting state")
wR <- tR %>%
add_column(From = c(task_names, "Resting state"))
lR <- wR %>%
pivot_longer(!From, names_to="To", values_to = "Correlation")
wR   %>%
xtable() %>%
kable(digits = 3) %>%
kable_styling(bootstrap_options = c("striped", "hover"))
lR   %>%
xtable() %>%
kable(digits = 3) %>%
kable_styling(bootstrap_options = c("striped", "hover"))
lR$From <- as_factor(lR$From, levels=c(task_names, "Resting State")
lR$To <- as_factor(lR$To, levels=c(task_names, "Resting State")
mres <- as.matrix(nres)
R <- cor(t(mres))
R[R==1] <- NA
tR <- as_tibble(R)
names(tR) <- c(task_names, "Resting state")
wR <- tR %>%
add_column(From = c(task_names, "Resting state"))
lR <- wR %>%
pivot_longer(!From, names_to="To", values_to = "Correlation")
wR   %>%
xtable() %>%
kable(digits = 3) %>%
kable_styling(bootstrap_options = c("striped", "hover"))
lR   %>%
xtable() %>%
kable(digits = 3) %>%
kable_styling(bootstrap_options = c("striped", "hover"))
lR$From <- as_factor(lR$From, levels=c(task_names, "Resting State"))
mres <- as.matrix(nres)
R <- cor(t(mres))
R[R==1] <- NA
tR <- as_tibble(R)
names(tR) <- c(task_names, "Resting state")
wR <- tR %>%
add_column(From = c(task_names, "Resting state"))
lR <- wR %>%
pivot_longer(!From, names_to="To", values_to = "Correlation")
wR   %>%
xtable() %>%
kable(digits = 3) %>%
kable_styling(bootstrap_options = c("striped", "hover"))
lR   %>%
xtable() %>%
kable(digits = 3) %>%
kable_styling(bootstrap_options = c("striped", "hover"))
lR$From <- as.factor(lR$From, levels=c(task_names, "Resting State"))
mres <- as.matrix(nres)
R <- cor(t(mres))
R[R==1] <- NA
tR <- as_tibble(R)
names(tR) <- c(task_names, "Resting state")
wR <- tR %>%
add_column(From = c(task_names, "Resting state"))
lR <- wR %>%
pivot_longer(!From, names_to="To", values_to = "Correlation")
wR   %>%
xtable() %>%
kable(digits = 3) %>%
kable_styling(bootstrap_options = c("striped", "hover"))
lR   %>%
xtable() %>%
kable(digits = 3) %>%
kable_styling(bootstrap_options = c("striped", "hover"))
lR$From <- factor(lR$From, levels=c(task_names, "Resting State"))
lR$To <- factor(lR$To, levels=c(task_names, "Resting State"))
ggplot(lR, aes(x=From, y=To, fill=Correlation)) +
geom_tile(col="white") +
# scale_fill_viridis_b(option="plasma") +
theme_pander() +
ggtitle("Parameter Correlations Across Tasks and Rest") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
mres <- as.matrix(nres)
R <- cor(t(mres))
R[R==1] <- NA
tR <- as_tibble(R)
names(tR) <- c(task_names, "Resting state")
wR <- tR %>%
add_column(From = c(task_names, "Resting state"))
lR <- wR %>%
pivot_longer(!From, names_to="To", values_to = "Correlation")
wR   %>%
xtable() %>%
kable(digits = 3) %>%
kable_styling(bootstrap_options = c("striped", "hover"))
lR   %>%
xtable() %>%
kable(digits = 3) %>%
kable_styling(bootstrap_options = c("striped", "hover"))
lR$From <- factor(lR$From, levels=c(task_names, "Resting state"))
lR$To <- factor(lR$To, levels=c(task_names, "Resting state"))
ggplot(lR, aes(x=From, y=To, fill=Correlation)) +
geom_tile(col="white") +
# scale_fill_viridis_b(option="plasma") +
theme_pander() +
ggtitle("Parameter Correlations Across Tasks and Rest") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
corMeans <- lR %>%
group_by("From") %>%
summarise(meanR = mean(Correlation, na.rm=T))
corMeans
lR
corMeans <- lR %>%
group_by("From") %>%
summarise(meanR = mean(Correlation, na.rm=T))
corMeans
corMeans <- lR %>%
group_by("To") %>%
summarise(meanR = mean(Correlation, na.rm=T))
corMeans
ggplot(lR, aes(x=From, y=To, fill=Correlation)) +
geom_tile(col="white") +
# scale_fill_viridis_b(option="plasma") +
theme_pander() +
scale_fill_viridis_b() +
ggtitle("Parameter Correlations Across Tasks and Rest") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(lR, aes(x=From, y=To, fill=Correlation)) +
geom_tile(col="white") +
# scale_fill_viridis_b(option="plasma") +
theme_pander() +
scale_fill_viridis() +
ggtitle("Parameter Correlations Across Tasks and Rest") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(lR, aes(x=From, y=To, fill=Correlation)) +
geom_tile(col="white") +
# scale_fill_viridis_b(option="plasma") +
theme_pander() +
scale_fill_viridis_a() +
ggtitle("Parameter Correlations Across Tasks and Rest") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(lR, aes(x=From, y=To, fill=Correlation)) +
geom_tile(col="white") +
# scale_fill_viridis_b(option="plasma") +
theme_pander() +
scale_fill_viridis_c() +
ggtitle("Parameter Correlations Across Tasks and Rest") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(lR, aes(x=From, y=To, fill=Correlation)) +
geom_tile(col="white") +
# scale_fill_viridis_b(option="plasma") +
theme_pander() +
scale_fill_viridis_d() +
ggtitle("Parameter Correlations Across Tasks and Rest") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(lR, aes(x=From, y=To, fill=Correlation)) +
geom_tile(col="white") +
# scale_fill_viridis_b(option="plasma") +
theme_pander() +
scale_fill_viridis_d() +
ggtitle("Parameter Correlations Across Tasks and Rest") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(lR, aes(x=From, y=To, fill=Correlation)) +
geom_tile(col="white") +
# scale_fill_viridis_b(option="plasma") +
theme_pander() +
scale_fill_viridis_c(option = "plasma") +
ggtitle("Parameter Correlations Across Tasks and Rest") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
cmdscale(R)
Rk<-R
Rk[is.na(Rk)]<-1
cmdscale(rK)
cmdscale(Rk)
cmdscale(nres)
Rk\
Rk
image(Rk)
cmdscale(Rk)
dist(nres)
cmdscale(dist(nres))
fit <- cmdscale(dist(nres))
x <- fit$points[,1]
fit <- cmdscale(dist(nres))
x <- fit$points[,1]
fit
fit <- cmdscale(dist(nres))
x <- fit[,1]
y <- fit[,2]
plot(x, y, xlab="Coordinate 1", ylab="Coordinate 2",
main="Metric MDS", type="n")
text(x, y, labels = row.names(mydata), cex=.7)
fit <- cmdscale(dist(nres))
x <- fit[,1]
y <- fit[,2]
plot(x, y, xlab="Coordinate 1", ylab="Coordinate 2",
main="Metric MDS", type="n")
text(x, y, labels = row.names(nres), cex=.7)
nres
fit <- cmdscale(dist(nres))
x <- fit[,1]
y <- fit[,2]
plot(x, y, xlab="Coordinate 1", ylab="Coordinate 2",
main="Metric MDS", type="n")
text(x, y, labels = c(task_names, "Resting state")), cex=.7)
fit <- cmdscale(dist(nres))
x <- fit[,1]
y <- fit[,2]
plot(x, y, xlab="Coordinate 1", ylab="Coordinate 2",
main="Metric MDS", type="n")
text(x, y, labels = c(task_names, "Resting state"), cex=.7)
corMeans <- lR %>%
group_by("To") %>%
summarise(meanR = mean(Correlation, na.rm=T))
corMeans <- lR %>%
group_by("To") %>%
summarise(meanR = mean(Correlation, na.rm=T))
corMeans
corMeans <- lR %>%
group_by(To) %>%
summarise(meanR = mean(Correlation, na.rm=T))
corMeans
corMeans <- lR %>%
filter(To != "Resting State") %>%
filter(From != "Resting state") %>%
group_by(To) %>%
summarise(meanR = mean(Correlation, na.rm=T))
corMeans
withinTaskMeans <- lR %>%
filter(To != "Resting State") %>%
filter(From != "Resting state") %>%
group_by(To) %>%
summarise(meanR = mean(Correlation, na.rm=T))
withinTaskMeans
restingStateMeans <- lR %>%
filter(To == "Resting State") %>%
filter(From != "Resting state") %>%
group_by(To) %>%
summarise(meanR = mean(Correlation, na.rm=T))
withinTaskMeans <- lR %>%
filter(To != "Resting State") %>%
filter(From != "Resting state") %>%
group_by(To) %>%
summarise(meanR = mean(Correlation, na.rm=T))
withinTaskMeans
restingStateMeans <- lR %>%
filter(To == "Resting State") %>%
filter(From != "Resting state") %>%
group_by(To) %>%
summarise(meanR = mean(Correlation, na.rm=T))
restingStateMeans
withinTaskMeans <- lR %>%
filter(To != "Resting State") %>%
filter(From != "Resting state") %>%
group_by(To) %>%
summarise(meanR = mean(Correlation, na.rm=T))
withinTaskMeans
restingStateMeans <- lR %>%
filter(From == "Resting State") %>%
filter(To != "Resting state") %>%
#group_by(To) %>%
summarise(meanR = mean(Correlation, na.rm=T))
restingStateMeans
restingStateMeans <- lR %>%
filter(From == "Resting State") %>%
filter(To != "Resting state")
restingStateMeans <- lR %>%
filter(From == "Resting State") %>%
filter(To != "Resting state")
restingStateMeans
restingStateMeans <- lR %>%
filter(From == "Resting State")
restingStateMeans
withinTaskMeans <- lR %>%
filter(To != "Resting State") %>%
filter(From != "Resting state") %>%
group_by(To) %>%
summarise(meanR = mean(Correlation, na.rm=T))
withinTaskMeans
restingStateMeans <- lR %>%
filter(From == "Resting state") %>%
filter(To != "Resting state") %>%
#group_by(To) %>%
summarise(meanR = mean(Correlation, na.rm=T))
restingStateMeans
restingStateMeans
range(withinTaskMeans$meanR)
withinTaskMeans <- lR %>%
filter(To != "Resting State") %>%
filter(From != "Resting state") %>%
group_by(To) %>%
summarise(meanR = mean(Correlation, na.rm=T))
withinTaskMeans
restingStateMeans <- lR %>%
filter(From == "Resting state") %>%
filter(To != "Resting state") %>%
#group_by(To) %>%
summarise(meanR = mean(Correlation, na.rm=T))
restingStateMeans %>%
xtable() %>%
kable(digits = 3) %>%
kable_styling(bootstrap_options = c("striped", "hover"))
withinTaskMeans <- lR %>%
filter(To != "Resting State") %>%
filter(From != "Resting state") %>%
group_by(To) %>%
summarise(meanR = mean(Correlation, na.rm=T))
withinTaskMeans
withinTaskMeans %>%
xtable() %>%
kable(digits = 3) %>%
kable_styling(bootstrap_options = c("striped", "hover"))
restingStateMeans <- lR %>%
filter(From == "Resting state") %>%
filter(To != "Resting state") %>%
#group_by(To) %>%
summarise(meanR = mean(Correlation, na.rm=T))
restingStateMeans %>%
xtable() %>%
kable(digits = 3) %>%
kable_styling(bootstrap_options = c("striped", "hover"))
